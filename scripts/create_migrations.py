#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('/workspaces/silant-project')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'silant.settings')
django.setup()

from django.core.management import execute_from_command_line

def create_migrations():
    print("üîÑ –°–û–ó–î–ê–ù–ò–ï –ú–ò–ì–†–ê–¶–ò–ô")
    
    # –°–æ–∑–¥–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    apps = ['directories', 'machines', 'maintenance', 'complaints']
    
    for app in apps:
        print(f"\nüì¶ –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –¥–ª—è {app}...")
        try:
            execute_from_command_line(['manage.py', 'makemigrations', app])
            print(f"‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è {app} —Å–æ–∑–¥–∞–Ω—ã")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π –¥–ª—è {app}: {e}")
    
    print("\nüöÄ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...")
    try:
        execute_from_command_line(['manage.py', 'migrate'])
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π: {e}")

if __name__ == "__main__":
    create_migrations()
