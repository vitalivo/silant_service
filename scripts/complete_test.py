#!/usr/bin/env python
"""
–ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
"""
import subprocess
import sys
import requests
import time

def complete_test():
    print("üß™ –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –°–ò–õ–ê–ù–¢")
    print("=" * 60)
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    print("\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    try:
        result = subprocess.run([
            sys.executable, "manage.py", "check", "--database", "default"
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –ø–æ—Ä—è–¥–∫–µ")
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö:")
            print(result.stderr)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î: {e}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π
    print("\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ú–û–î–ï–õ–ï–ô")
    try:
        result = subprocess.run([
            sys.executable, "manage.py", "check"
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –ú–æ–¥–µ–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –º–æ–¥–µ–ª—è–º–∏:")
            print(result.stderr)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–¥–µ–ª–µ–π: {e}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    print("\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–•")
    try:
        subprocess.run([sys.executable, "scripts/quick_system_check.py"])
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ API (–µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω)
    print("\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê API")
    try:
        response = requests.get("http://localhost:8000/api/", timeout=5)
        if response.status_code == 200:
            print("‚úÖ API –¥–æ—Å—Ç—É–ø–Ω–æ")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ endpoints
            endpoints = [
                "machines/",
                "machines/search_by_serial/?serial=17"
            ]
            
            for endpoint in endpoints:
                try:
                    resp = requests.get(f"http://localhost:8000{endpoint}", timeout=5)
                    print(f"   {endpoint}: {resp.status_code}")
                except:
                    print(f"   {endpoint}: ‚ùå")
        else:
            print(f"‚ö†Ô∏è  API –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º {response.status_code}")
    except requests.exceptions.ConnectionError:
        print("‚ö†Ô∏è  API —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python manage.py runserver")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ API: {e}")
    
    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    print("\n5Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –§–†–û–ù–¢–ï–ù–î–ê")
    try:
        response = requests.get("http://localhost:3000", timeout=5)
        if response.status_code == 200:
            print("‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"‚ö†Ô∏è  –§—Ä–æ–Ω—Ç–µ–Ω–¥ –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º {response.status_code}")
    except requests.exceptions.ConnectionError:
        print("‚ö†Ô∏è  –§—Ä–æ–Ω—Ç–µ–Ω–¥ —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: cd frontend && npm run dev")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: {e}")
    
    print("\n" + "=" * 60)
    print("üéØ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")

if __name__ == "__main__":
    complete_test()
