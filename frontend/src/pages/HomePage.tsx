"use client"

import type React from "react"
import { useState } from "react"
import { Search } from "lucide-react"
import { machineService } from "../services/api"
import styles from "../styles/HomePage.module.css"

const HomePage: React.FC = () => {
  const [serialNumber, setSerialNumber] = useState("")
  const [machine, setMachine] = useState<any>(null)
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState<string | null>(null)

  const handleSearch = async (e: React.FormEvent) => {
    e.preventDefault()
    if (!serialNumber.trim()) return

    setLoading(true)
    setError(null)

    try {
      const response = await machineService.searchBySerial(serialNumber)
      setMachine(response.data)
    } catch (err: any) {
      console.error("–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:", err)
      if (err.response?.status === 404) {
        setError("–ú–∞—à–∏–Ω–∞ —Å —Ç–∞–∫–∏–º —Å–µ—Ä–∏–π–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
      } else {
        setError(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: ${err.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"}`)
      }
      setMachine(null)
    } finally {
      setLoading(false)
    }
  }

  const features = [
    {
      icon: "üõ°Ô∏è",
      title: "–ù–∞–¥—ë–∂–Ω–æ—Å—Ç—å",
      description: "–í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å –Ω–∞—à–µ–π —Ç–µ—Ö–Ω–∏–∫–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –≤—Ä–µ–º–µ–Ω–µ–º",
      iconClass: styles.featureIconBlue,
    },
    {
      icon: "üîß",
      title: "–°–µ—Ä–≤–∏—Å",
      description: "–ü–æ–ª–Ω–æ–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏",
      iconClass: styles.featureIconGreen,
    },
    {
      icon: "üèÜ",
      title: "–ö–∞—á–µ—Å—Ç–≤–æ",
      description: "–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤—Å–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
      iconClass: styles.featureIconPurple,
    },
    {
      icon: "üë•",
      title: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞",
      description: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å",
      iconClass: styles.featureIconOrange,
    },
  ]

  const stats = [
    { number: "1000+", label: "–ú–∞—à–∏–Ω –≤ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏", icon: "üöõ" },
    { number: "50+", label: "–†–µ–≥–∏–æ–Ω–æ–≤ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è", icon: "üó∫Ô∏è" },
    { number: "24/7", label: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞", icon: "üìû" },
  ]

  return (
    <div className={styles.container}>
      {/* Hero Section */}
      <section className={styles.hero}>
        <div className={styles.heroContent}>
          {/* Logo */}
          <div className={styles.logoContainer}>
            <div className={styles.logoWrapper}>
              <img src="/images/logo-red.jpg" alt="–°–∏–ª–∞–Ω—Ç" className={styles.logo} />
            </div>
          </div>

          <div className={styles.badge}>
            <span style={{ marginRight: "8px" }}>‚ö°</span>
            –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ç–µ—Ö–Ω–∏–∫–∏ –°–ò–õ–ê–ù–¢
          </div>

          <h1 className={styles.title}>
            –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ—é
            <span className={styles.titleGradient}>—Ç–µ—Ö–Ω–∏–∫—É –°–ò–õ–ê–ù–¢</span>
          </h1>

          <p className={styles.subtitle}>
            –í–≤–µ–¥–∏—Ç–µ –∑–∞–≤–æ–¥—Å–∫–æ–π –Ω–æ–º–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞—Ö –∏
            –∏—Å—Ç–æ—Ä–∏–∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –≤–∞—à–µ–π —Ç–µ—Ö–Ω–∏–∫–∏
          </p>

          {/* Search Form */}
          <form onSubmit={handleSearch} className={styles.searchForm}>
            <div className={styles.searchContainer}>
              <input
                type="text"
                value={serialNumber}
                onChange={(e) => setSerialNumber(e.target.value)}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–≤–æ–¥—Å–∫–æ–π –Ω–æ–º–µ—Ä –º–∞—à–∏–Ω—ã..."
                className={styles.searchInput}
              />
              <button type="submit" disabled={loading} className={styles.searchButton}>
                <Search size={20} />
                {loading ? "–ü–æ–∏—Å–∫..." : "–ù–∞–π—Ç–∏"}
              </button>
            </div>
          </form>
        </div>
      </section>

      {/* Error Message */}
      {error && (
        <section className={styles.errorSection}>
          <div className={styles.errorContainer}>
            <div className={styles.errorCard}>
              <span style={{ fontSize: "24px" }}>‚ö†Ô∏è</span>
              <p className={styles.errorText}>{error}</p>
            </div>
          </div>
        </section>
      )}

      {/* Machine Info */}
      {machine && (
        <section className={styles.machineSection}>
          <div className={styles.machineContainer}>
            <div className={styles.machineCard}>
              <div className={styles.machineHeader}>
                <div className={styles.machineHeaderContent}>
                  <div className={styles.machineIcon}>üèÜ</div>
                  <div>
                    <h2 className={styles.machineTitle}>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—à–∏–Ω–µ</h2>
                    <p className={styles.machineSerial}>–°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä: {machine.serial_number}</p>
                  </div>
                </div>
              </div>

              <div className={styles.machineContent}>
                <div className={styles.machineGrid}>
                  {[
                    { label: "–ú–æ–¥–µ–ª—å —Ç–µ—Ö–Ω–∏–∫–∏", value: machine.technique_model?.name, icon: "üöõ" },
                    { label: "–ú–æ–¥–µ–ª—å –¥–≤–∏–≥–∞—Ç–µ–ª—è", value: machine.engine_model?.name, icon: "‚öôÔ∏è" },
                    { label: "–°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä –¥–≤–∏–≥–∞—Ç–µ–ª—è", value: machine.engine_serial, icon: "üî¢" },
                    { label: "–ú–æ–¥–µ–ª—å —Ç—Ä–∞–Ω—Å–º–∏—Å—Å–∏–∏", value: machine.transmission_model?.name, icon: "üîß" },
                    { label: "–°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä —Ç—Ä–∞–Ω—Å–º–∏—Å—Å–∏–∏", value: machine.transmission_serial, icon: "üî¢" },
                    {
                      label: "–î–∞—Ç–∞ –æ—Ç–≥—Ä—É–∑–∫–∏",
                      value: machine.shipment_date ? new Date(machine.shipment_date).toLocaleDateString("ru-RU") : "‚Äî",
                      icon: "üìÖ",
                    },
                  ].map((item, index) => (
                    <div key={index} className={styles.machineItem}>
                      <div className={styles.machineItemHeader}>
                        <span className={styles.machineItemIcon}>{item.icon}</span>
                        <h3 className={styles.machineItemLabel}>{item.label}</h3>
                      </div>
                      <p className={styles.machineItemValue}>{item.value || "‚Äî"}</p>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </section>
      )}

      {/* Features Section */}
      <section className={styles.featuresSection}>
        <div className={styles.featuresContainer}>
          <div className={styles.featuresHeader}>
            <h2 className={styles.featuresTitle}>–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –°–ò–õ–ê–ù–¢</h2>
            <p className={styles.featuresSubtitle}>
              –ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞–¥–µ–∂–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏ —É–∂–µ –±–æ–ª–µ–µ 20 –ª–µ—Ç
            </p>
          </div>

          <div className={styles.featuresGrid}>
            {features.map((feature, index) => (
              <div key={index} className={styles.featureCard}>
                <div className={`${styles.featureIcon} ${feature.iconClass}`}>
                  <span>{feature.icon}</span>
                </div>
                <h3 className={styles.featureTitle}>{feature.title}</h3>
                <p className={styles.featureDescription}>{feature.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Stats Section */}
      <section className={styles.statsSection}>
        <div className={styles.statsContainer}>
          <div className={styles.statsGrid}>
            {stats.map((stat, index) => (
              <div key={index} className={styles.statCard}>
                <div className={styles.statIcon}>{stat.icon}</div>
                <div className={styles.statNumber}>{stat.number}</div>
                <div className={styles.statLabel}>{stat.label}</div>
              </div>
            ))}
          </div>
        </div>
      </section>
    </div>
  )
}

export default HomePage
